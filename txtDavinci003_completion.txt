### OpenAI COMPLETION CONFIGURATION ###
###########################################################################################################################################################################

# 'text-davinci-003' completions
history = ""
extraContext = 'context2.txt'
with open(extraContext, 'r') as file:
        context = file.read()
        context.strip()
history += f"{context}"

def completion(prompt, history): 
   response = openai.Completion.create( 
      engine="text-davinci-003",
      prompt=prompt,
      max_tokens=1024,
      n=1,
      stop=None,
      temperature=0.4
   )
   return response.choices[0].text.strip() 

###########################################################################################################################################################################
### END OpenAI COMPLETION CONFIGURATION ###





### APPLICATION CONFIGURATION ###

# Submit Command to OpenAI API Handler
def submit_command(history, userQuery):
    history_text.config(state="normal")
    history_text.insert(tk.END, f"User>> {userQuery}\n")
    prompt = f"{history}User>> {userQuery}\n"
    responseOutput = completion(prompt, history)
    history_text.insert(tk.END, f"ChatGPT Said>> {responseOutput}\n")
    history_text.config(state="disabled")
    history += f"User Said>> {userQuery}\n {responseOutput}\n"
    user_input.delete("1.0", tk.END)

# Create a New completion
def new_completion_command():
    history_text.config(state="normal")
    history_text.delete('1.0', tk.END)
    history_text.config(state="disabled")
    history = ""
    extraContext = 'context2.txt'

    with open(extraContext, 'r') as file:
        context = file.read()
        context.strip()

    history += f"{context}"